// <auto-generated />
using System;
using Ecomwed.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecomwed.Migrations
{
    [DbContext(typeof(Cappdbcontext))]
    [Migration("20240715022417_updatereviewnew")]
    partial class updatereviewnew
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecomwed.Models.admin.admins", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("admins");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("customersID")
                        .HasColumnType("int");

                    b.Property<bool>("isselected")
                        .HasColumnType("bit");

                    b.Property<int?>("productsId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("customersID");

                    b.HasIndex("productsId");

                    b.ToTable("cart");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.customerprofile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NRIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birthday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("zipcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("customerprofile");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.customers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("customerprofileID")
                        .HasColumnType("int");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("laslogintime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("logintimenow")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("customerprofileID");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.detail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("QTY")
                        .HasColumnType("int");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("productsId")
                        .HasColumnType("int");

                    b.Property<int?>("tanshhistoryid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productsId");

                    b.HasIndex("tanshhistoryid");

                    b.ToTable("detail");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.tanshhistory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("customersID")
                        .HasColumnType("int");

                    b.Property<string>("grandtotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sst")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("subtotal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("time")
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("customersID");

                    b.ToTable("tanshhistory");
                });

            modelBuilder.Entity("Ecomwed.Models.product.categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoryname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Ecomwed.Models.product.products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("afterdiscountprice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("categoriesId")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("discount")
                        .HasColumnType("int");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("normalprice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("productname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("sellersID")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoriesId");

                    b.HasIndex("sellersID");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Ecomwed.Models.product.review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Review")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("StarRating")
                        .HasColumnType("real");

                    b.Property<int>("customersID")
                        .HasColumnType("int");

                    b.Property<int>("productsId")
                        .HasColumnType("int");

                    b.Property<DateTime>("reviewdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("customersID");

                    b.HasIndex("productsId");

                    b.ToTable("review");
                });

            modelBuilder.Entity("Ecomwed.Models.seller.sellerprofile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NRIC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birthday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phonenumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("sellerprofile");
                });

            modelBuilder.Entity("Ecomwed.Models.seller.sellers", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("laslogintime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("logintimenow")
                        .HasColumnType("datetime2");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("sellerprofileID")
                        .HasColumnType("int");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("sellerprofileID");

                    b.ToTable("sellers");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.cart", b =>
                {
                    b.HasOne("Ecomwed.Models.custermor.customers", "customers")
                        .WithMany()
                        .HasForeignKey("customersID");

                    b.HasOne("Ecomwed.Models.product.products", "products")
                        .WithMany()
                        .HasForeignKey("productsId");

                    b.Navigation("customers");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.customers", b =>
                {
                    b.HasOne("Ecomwed.Models.custermor.customerprofile", "profile")
                        .WithMany()
                        .HasForeignKey("customerprofileID");

                    b.Navigation("profile");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.detail", b =>
                {
                    b.HasOne("Ecomwed.Models.product.products", "products")
                        .WithMany()
                        .HasForeignKey("productsId");

                    b.HasOne("Ecomwed.Models.custermor.tanshhistory", "tanshhistory")
                        .WithMany()
                        .HasForeignKey("tanshhistoryid");

                    b.Navigation("products");

                    b.Navigation("tanshhistory");
                });

            modelBuilder.Entity("Ecomwed.Models.custermor.tanshhistory", b =>
                {
                    b.HasOne("Ecomwed.Models.custermor.customers", "customers")
                        .WithMany()
                        .HasForeignKey("customersID");

                    b.Navigation("customers");
                });

            modelBuilder.Entity("Ecomwed.Models.product.products", b =>
                {
                    b.HasOne("Ecomwed.Models.product.categories", "categories")
                        .WithMany()
                        .HasForeignKey("categoriesId");

                    b.HasOne("Ecomwed.Models.seller.sellers", "sellers")
                        .WithMany()
                        .HasForeignKey("sellersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("categories");

                    b.Navigation("sellers");
                });

            modelBuilder.Entity("Ecomwed.Models.product.review", b =>
                {
                    b.HasOne("Ecomwed.Models.custermor.customers", "custermor")
                        .WithMany()
                        .HasForeignKey("customersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ecomwed.Models.product.products", "products")
                        .WithMany()
                        .HasForeignKey("productsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("custermor");

                    b.Navigation("products");
                });

            modelBuilder.Entity("Ecomwed.Models.seller.sellers", b =>
                {
                    b.HasOne("Ecomwed.Models.seller.sellerprofile", "profile")
                        .WithMany()
                        .HasForeignKey("sellerprofileID");

                    b.Navigation("profile");
                });
#pragma warning restore 612, 618
        }
    }
}
